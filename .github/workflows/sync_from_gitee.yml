name: Sync Data from Gitee

on:
  # 每天北京时间21 点 (21:00 UTC) 自动执行
  schedule:
    - cron: '0 13 * * *'
  # 允许在 Actions 页面手动触发此工作流
  workflow_dispatch:

jobs:
  sync-file:
    runs-on: ubuntu-latest
    steps:
      # 1. 先 Checkout 当前的 GitHub 仓库，这样我们才能向它提交文件
      - name: Checkout GitHub Repo
        uses: actions/checkout@v4

      # 2. 从 Gitee API 获取文件的下载链接并下载
      - name: Download data file from Gitee
        run: |
          # 创建本地目录以存放文件
          mkdir -p $(dirname "${{ secrets.GITEE_DATA_PATH }}")
          
          # 调用 Gitee API 获取文件元数据，并从中提取 download_url
          DOWNLOAD_URL=$(curl -s -H "Authorization: token ${{ secrets.GITEE_TOKEN }}" \
            "https://gitee.com/api/v5/repos/${{ secrets.GITEE_REPO }}/contents/${{ secrets.GITEE_DATA_PATH }}" \
            | jq -r '.download_url')
            
          # 检查是否成功获取 URL
          if [ -z "$DOWNLOAD_URL" ] || [ "$DOWNLOAD_URL" == "null" ]; then
            echo "Error: Could not retrieve download URL from Gitee. Check secrets and permissions."
            exit 1
          fi
          
          # 使用获取到的 URL 下载文件
          curl -s -o "${{ secrets.GITEE_DATA_PATH }}" "$DOWNLOAD_URL"
          echo "File downloaded successfully."

      # 3. 自动提交和推送文件（如果文件内容有变化）
      - name: Commit and push if changed
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(data): Sync daily data from Gitee"
          # 指定要检查的文件模式
          file_pattern: "${{ secrets.GITEE_DATA_PATH }}"
          commit_user_name: github-actions[bot]
          commit_user_email: 41898282+github-actions[bot]@users.noreply.github.com
          commit_author: GitHub Actions <41898282+github-actions[bot]@users.noreply.github.com>

