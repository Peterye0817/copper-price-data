# 工作流名称
name: Sync File from Gitee
permissions:
  contents: write

# 工作流触发条件
on:
  # 1. 定时触发：使用 cron 表达式，CST 时间为周六上午 10 点 (UTC 时间为周六凌晨 2 点)
  schedule:
    - cron: '0 13 * * *' # '分钟 小时 日 月 星期'，这里的 6 代表星期六

  # 2. 手动触发：允许您在 GitHub Actions 页面手动运行此工作流，方便测试
  workflow_dispatch:

# 任务（Jobs）
jobs:
  sync:
    # 运行环境
    runs-on: ubuntu-latest

    # 步骤（Steps）
    steps:
      # 第一步：检出（Checkout）当前的 GitHub 仓库
      - name: Checkout GitHub Repo
        uses: actions/checkout@v4

      # 第二步：使用临时目录克隆 Gitee 仓库
      # 我们将 Gitee 仓库克隆到一个名为 "gitee-temp" 的临时文件夹中
      - name: Clone Gitee Repo
        run: |
          git clone ${{ secrets.GITEE_REPO_URL }} gitee-temp
        
      # 第三步：从 Gitee 仓库复制所需文件到 GitHub 仓库
      # !!! 请修改下面的文件路径 !!!
      - name: Copy file from Gitee
        run: |
          # 格式：cp <临时文件夹>/<Gitee中的文件路径> <要复制到的GitHub仓库路径>
          # 示例：将 Gitee 仓库根目录的 README.md 复制到当前仓库的 docs 目录下
          cp gitee-temp/copper_forex_daily.csv ./
          # 示例：将 Gitee 仓库 src 目录下的 a.txt 复制到当前仓库的 src 目录下
          # cp gitee-temp/src/a.txt ./src/

      # 第四步：提交并推送到 GitHub
      - name: Commit and Push to GitHub
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          # 检查是否有文件变动
          if [ -n "$(git status --porcelain)" ]; then
            echo "Changes detected. Committing and pushing..."
            git add .
            git commit -m "chore: 自动同步 Gitee 文件"
            git push
          else
            echo "No changes to commit."
          fi
